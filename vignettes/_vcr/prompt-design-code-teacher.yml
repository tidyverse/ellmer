http_interactions:
- request:
    method: POST
    uri: https://api.anthropic.com/v1/messages
  response:
    status: 200
    headers:
      date: Wed, 25 Jun 2025 16:53:21 GMT
      content-type: application/json
      anthropic-ratelimit-input-tokens-limit: '40000'
      anthropic-ratelimit-input-tokens-remaining: '40000'
      anthropic-ratelimit-input-tokens-reset: '2025-06-25T16:53:12Z'
      anthropic-ratelimit-output-tokens-limit: '16000'
      anthropic-ratelimit-output-tokens-remaining: '16000'
      anthropic-ratelimit-output-tokens-reset: '2025-06-25T16:53:22Z'
      anthropic-ratelimit-requests-limit: '1000'
      anthropic-ratelimit-requests-remaining: '999'
      anthropic-ratelimit-requests-reset: '2025-06-25T16:53:09Z'
      anthropic-ratelimit-tokens-limit: '56000'
      anthropic-ratelimit-tokens-remaining: '56000'
      anthropic-ratelimit-tokens-reset: '2025-06-25T16:53:12Z'
      request-id: req_011CQVHdFYQHgM2fdLWYk5a9
      strict-transport-security: max-age=31536000; includeSubDomains; preload
      anthropic-organization-id: bf3687d8-1b59-41eb-9761-a1fd70b24e7e
      via: 1.1 google
      cf-cache-status: DYNAMIC
      x-robots-tag: none
      server: cloudflare
      cf-ray: 9555fac07ed26c10-DFW
      content-encoding: gzip
    body:
      string: '{"id":"msg_01UfUrXqS2YYz1FnjoYzxcBJ","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"```r\n#
        Load required library for data manipulation\nlibrary(dplyr)\n\n# Method 1:
        Using dplyr with across() for multiple variables\nresult <- data %>%\n  group_by(age,
        sex) %>%  # Group data by age and sex categories\n  summarise(\n    across(\n      .cols
        = a:z,  # Select all columns from ''a'' to ''z''\n      .fns = list(\n        mean
        = ~ mean(.x, na.rm = TRUE),    # Calculate mean, removing NA values\n        median
        = ~ median(.x, na.rm = TRUE) # Calculate median, removing NA values\n      ),\n      .names
        = \"{.col}_{.fn}\"  # Name format: variable_statistic (e.g., a_mean, a_median)\n    ),\n    .groups
        = \"drop\"  # Remove grouping structure from result\n  )\n\n# Method 2: Alternative
        using summarise_at() (older dplyr syntax)\nresult2 <- data %>%\n  group_by(age,
        sex) %>%  # Group data by age and sex categories\n  summarise_at(\n    .vars
        = vars(a:z),  # Specify variables from ''a'' to ''z''\n    .funs = list(\n      mean
        = ~ mean(.x, na.rm = TRUE),    # Calculate mean function\n      median = ~
        median(.x, na.rm = TRUE) # Calculate median function\n    )\n  ) %>%\n  ungroup()  #
        Remove grouping structure\n\n# Method 3: Using base R with aggregate() function\n#
        For means\nmeans_result <- aggregate(\n  cbind(a, b, c, d, e, f, g, h, i,
        j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z) ~ age + sex,\n  data =
        data,           # Source data frame\n  FUN = mean,           # Function to
        apply (mean)\n  na.rm = TRUE          # Remove NA values before calculation\n)\n\n#
        For medians\nmedians_result <- aggregate(\n  cbind(a, b, c, d, e, f, g, h,
        i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z) ~ age + sex,\n  data
        = data,           # Source data frame\n  FUN = median,         # Function
        to apply (median)\n  na.rm = TRUE          # Remove NA values before calculation\n)\n```"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":120,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":604,"service_tier":"standard"}}'
  recorded_at: 2025-06-25 16:53:21
recorded_with: vcr/1.7.0.91, webmockr/2.0.0
