http_interactions:
- request:
    method: POST
    uri: https://api.anthropic.com/v1/messages
    body:
      string: '{"model":"claude-sonnet-4-20250514","system":"\n  You are an expert
        R programmer who prefers the tidyverse.\n","messages":[{"role":"user","content":[{"type":"text","text":"\n  How
        can I compute the mean and median of variables a, b, c, and so on,\n  all
        the way up to z, grouped by age and sex.\n"}]}],"stream":false,"max_tokens":4096}'
  response:
    status: 200
    headers:
      date: Wed, 25 Jun 2025 17:20:00 GMT
      content-type: application/json
      anthropic-ratelimit-input-tokens-limit: '40000'
      anthropic-ratelimit-input-tokens-remaining: '40000'
      anthropic-ratelimit-input-tokens-reset: '2025-06-25T17:19:48Z'
      anthropic-ratelimit-output-tokens-limit: '16000'
      anthropic-ratelimit-output-tokens-remaining: '16000'
      anthropic-ratelimit-output-tokens-reset: '2025-06-25T17:20:00Z'
      anthropic-ratelimit-requests-limit: '1000'
      anthropic-ratelimit-requests-remaining: '999'
      anthropic-ratelimit-requests-reset: '2025-06-25T17:19:47Z'
      anthropic-ratelimit-tokens-limit: '56000'
      anthropic-ratelimit-tokens-remaining: '56000'
      anthropic-ratelimit-tokens-reset: '2025-06-25T17:19:48Z'
      request-id: req_011CQVKf37LL8wFMiKL7Hr6m
      strict-transport-security: max-age=31536000; includeSubDomains; preload
      anthropic-organization-id: bf3687d8-1b59-41eb-9761-a1fd70b24e7e
      via: 1.1 google
      cf-cache-status: DYNAMIC
      x-robots-tag: none
      server: cloudflare
      cf-ray: 955621c31c6cc871-DFW
      content-encoding: gzip
    body:
      string: '{"id":"msg_01VXZjk3Pt1Veg84M9Lc2csq","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Here
        are a few efficient ways to compute the mean and median of variables `a` through
        `z`, grouped by `age` and `sex` using the tidyverse:\n\n## Method 1: Using
        `across()` with `summarise()` (Recommended)\n\n```r\nlibrary(dplyr)\n\nresult
        <- data %>%\n  group_by(age, sex) %>%\n  summarise(\n    across(a:z, list(mean
        = mean, median = median), .names = \"{.col}_{.fn}\"),\n    .groups = \"drop\"\n  )\n```\n\n##
        Method 2: If you want separate tables for mean and median\n\n```r\n# Mean
        values\nmeans <- data %>%\n  group_by(age, sex) %>%\n  summarise(across(a:z,
        mean, .names = \"{.col}_mean\"), .groups = \"drop\")\n\n# Median values  \nmedians
        <- data %>%\n  group_by(age, sex) %>%\n  summarise(across(a:z, median, .names
        = \"{.col}_median\"), .groups = \"drop\")\n\n# Combine if needed\nresult <-
        means %>%\n  left_join(medians, by = c(\"age\", \"sex\"))\n```\n\n## Method
        3: For a longer format (useful for plotting)\n\n```r\nlibrary(tidyr)\n\nresult_long
        <- data %>%\n  group_by(age, sex) %>%\n  summarise(across(a:z, list(mean =
        mean, median = median)), .groups = \"drop\") %>%\n  pivot_longer(\n    cols
        = -c(age, sex),\n    names_to = c(\"variable\", \"statistic\"),\n    names_sep
        = \"_\",\n    values_to = \"value\"\n  )\n```\n\n## Method 4: With custom
        column selection\n\nIf you need more control over which columns to include:\n\n```r\n#
        Select columns by pattern\nresult <- data %>%\n  group_by(age, sex) %>%\n  summarise(\n    across(matches(\"^[a-z]$\"),
        list(mean = mean, median = median), .names = \"{.col}_{.fn}\"),\n    .groups
        = \"drop\"\n  )\n\n# Or select specific columns\nresult <- data %>%\n  group_by(age,
        sex) %>%\n  summarise(\n    across(c(a, b, c, d, e, f, g, h, i, j, k, l, m,
        n, o, p, q, r, s, t, u, v, w, x, y, z), \n           list(mean = mean, median
        = median), \n           .names = \"{.col}_{.fn}\"),\n    .groups = \"drop\"\n  )\n```\n\n**Method
        1** is usually the most concise and readable. The `across()` function applies
        the specified functions (`mean` and `median`) to all columns from `a` to `z`,
        and the `.names` argument controls how the output columns are named.\n\nThe
        result will have columns like `a_mean`, `a_median`, `b_mean`, `b_median`,
        etc., along with your grouping variables `age` and `sex`."}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":61,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":743,"service_tier":"standard"}}'
  recorded_at: 2025-06-25 17:20:00
recorded_with: vcr/1.7.0.91, webmockr/2.0.0
