http_interactions:
- request:
    method: POST
    uri: https://api.anthropic.com/v1/messages
    body:
      string: '{"model":"claude-sonnet-4-5-20250929","system":"\n  You are an expert
        R programmer who prefers the tidyverse.\n","messages":[{"role":"user","content":[{"type":"text","text":"\n  How
        can I compute the mean and median of variables a, b, c, and so on,\n  all
        the way up to z, grouped by age and sex.\n"}]}],"stream":false,"max_tokens":4096}'
  response:
    status: 200
    headers:
      date: Wed, 22 Oct 2025 14:34:44 GMT
      content-type: application/json
      content-encoding: gzip
      anthropic-ratelimit-input-tokens-limit: '2000000'
      anthropic-ratelimit-input-tokens-remaining: '2000000'
      anthropic-ratelimit-input-tokens-reset: '2025-10-22T14:34:39Z'
      anthropic-ratelimit-output-tokens-limit: '400000'
      anthropic-ratelimit-output-tokens-remaining: '400000'
      anthropic-ratelimit-output-tokens-reset: '2025-10-22T14:34:44Z'
      anthropic-ratelimit-requests-limit: '4000'
      anthropic-ratelimit-requests-remaining: '3999'
      anthropic-ratelimit-requests-reset: '2025-10-22T14:34:37Z'
      anthropic-ratelimit-tokens-limit: '2400000'
      anthropic-ratelimit-tokens-remaining: '2400000'
      anthropic-ratelimit-tokens-reset: '2025-10-22T14:34:39Z'
      request-id: req_011CUNQKVPkzSCM6CpuaV7f3
      strict-transport-security: max-age=31536000; includeSubDomains; preload
      anthropic-organization-id: bf3687d8-1b59-41eb-9761-a1fd70b24e7e
      x-envoy-upstream-service-time: '6928'
      via: 1.1 google
      cf-cache-status: DYNAMIC
      x-robots-tag: none
      server: cloudflare
      cf-ray: 9929b7716c7e461a-DFW
    body:
      string: '{"model":"claude-sonnet-4-5-20250929","id":"msg_01WYxzpiBDSpqsxxhk4mXS1j","type":"message","role":"assistant","content":[{"type":"text","text":"Here''s
        how to compute mean and median for variables a through z, grouped by age and
        sex using tidyverse:\n\n```r\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Option 1:
        Using across() with summarise()\nresult <- df %>%\n  group_by(age, sex) %>%\n  summarise(\n    across(\n      a:z,\n      list(mean
        = mean, median = median),\n      .names = \"{.col}_{.fn}\"\n    ),\n    .groups
        = \"drop\"\n  )\n\n# Option 2: If you want long format for easier viewing\nresult_long
        <- df %>%\n  group_by(age, sex) %>%\n  summarise(\n    across(\n      a:z,\n      list(mean
        = mean, median = median)\n    ),\n    .groups = \"drop\"\n  ) %>%\n  pivot_longer(\n    cols
        = -c(age, sex),\n    names_to = c(\"variable\", \"statistic\"),\n    names_sep
        = \"_\",\n    values_to = \"value\"\n  )\n\n# Option 3: If you need to handle
        missing values\nresult <- df %>%\n  group_by(age, sex) %>%\n  summarise(\n    across(\n      a:z,\n      list(mean
        = ~mean(.x, na.rm = TRUE), \n           median = ~median(.x, na.rm = TRUE)),\n      .names
        = \"{.col}_{.fn}\"\n    ),\n    .groups = \"drop\"\n  )\n```\n\nThe result
        will have columns like `a_mean`, `a_median`, `b_mean`, `b_median`, etc., with
        one row per age/sex combination."}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":61,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"cache_creation":{"ephemeral_5m_input_tokens":0,"ephemeral_1h_input_tokens":0},"output_tokens":402,"service_tier":"standard"}}'
  recorded_at: 2025-10-22 14:34:44
recorded_with: VCR-vcr/2.0.0
