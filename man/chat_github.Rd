% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provider-github.R
\name{chat_github}
\alias{chat_github}
\alias{models_github}
\title{Chat with a model hosted on the GitHub model marketplace}
\usage{
chat_github(
  system_prompt = NULL,
  base_url = "https://models.github.ai/inference/",
  api_key = github_key(),
  model = NULL,
  params = NULL,
  seed = NULL,
  api_args = list(),
  echo = NULL,
  api_headers = character()
)

models_github(base_url = "https://models.github.ai/", api_key = github_key())
}
\arguments{
\item{system_prompt}{A system prompt to set the behavior of the assistant.}

\item{base_url}{The base URL to the endpoint; the default uses OpenAI.}

\item{api_key}{API key to use for authentication.

You generally should not supply this directly, but instead set the \code{GITHUB_PAT} environment variable.
The best place to set this is in \code{.Renviron},
which you can easily edit by calling \code{usethis::edit_r_environ()}.}

\item{model}{The model to use for the chat (defaults to "gpt-4o").
We regularly update the default, so we strongly recommend explicitly specifying a model for anything other than casual use.}

\item{params}{Common model parameters, usually created by \code{\link[=params]{params()}}.}

\item{seed}{Optional integer seed that ChatGPT uses to try and make output
more reproducible.}

\item{api_args}{Named list of arbitrary extra arguments appended to the body
of every chat API call. Combined with the body object generated by ellmer
with \code{\link[=modifyList]{modifyList()}}.}

\item{echo}{One of the following options:
\itemize{
\item \code{none}: don't emit any output (default when running in a function).
\item \code{output}: echo text and tool-calling output as it streams in (default
when running at the console).
\item \code{all}: echo all input and output.
}

Note this only affects the \code{chat()} method.}

\item{api_headers}{Named character vector of arbitrary extra headers appended
to every chat API call.}
}
\value{
A \link{Chat} object.
}
\description{
GitHub Models hosts a number of open source and OpenAI models. To access the
GitHub model marketplace, you will need to apply for and be accepted into the
beta access program. See \url{https://github.com/marketplace/models} for details.

This function is a lightweight wrapper around \code{\link[=chat_openai]{chat_openai()}} with
the defaults tweaked for the GitHub Models marketplace.

GitHub also suports the Azure AI Inference SDK, which you can use by setting
\code{base_url} to \code{"https://models.inference.ai.azure.com/"}. This endpoint was
used in \pkg{ellmer} v0.3.0 and earlier.
}
\examples{
\dontrun{
chat <- chat_github()
chat$chat("Tell me three jokes about statisticians")
}
}
\seealso{
Other chatbots: 
\code{\link{chat_anthropic}()},
\code{\link{chat_aws_bedrock}()},
\code{\link{chat_azure_openai}()},
\code{\link{chat_cloudflare}()},
\code{\link{chat_databricks}()},
\code{\link{chat_deepseek}()},
\code{\link{chat_google_gemini}()},
\code{\link{chat_groq}()},
\code{\link{chat_huggingface}()},
\code{\link{chat_mistral}()},
\code{\link{chat_ollama}()},
\code{\link{chat_openai}()},
\code{\link{chat_openrouter}()},
\code{\link{chat_perplexity}()},
\code{\link{chat_portkey}()}
}
\concept{chatbots}
