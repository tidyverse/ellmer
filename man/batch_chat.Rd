% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batch-chat.R
\name{batch_chat}
\alias{batch_chat}
\title{Submit multiple chats in one batch}
\usage{
batch_chat(chat, prompts, path, wait = TRUE)
}
\arguments{
\item{path}{Path to file (with \code{.json} extension) to store state.}

\item{wait}{If \code{TRUE}, will wait for batch to complete. If \code{FALSE},
it will check once and error if the job is not complete.}

\item{inheritParams}{parallel_chat}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\code{batch_chat()} is currently implemented for OpenAI and Anthropic, where it
uses their batch API which allow you to submit multiple requests
simultaenously. You get the results back within 24 hours in return for paying
50\% less than usual (but note that ellmer doesn't include this discount in
its pricing metadata). If you want to get results back more quickly, you
may want to use \code{\link[=parallel_chat]{parallel_chat()}} instead.

Since batched requests can take a long time to complete, \code{batch_chat()}
requires a file path that is used to store information about the batch so
you never lose any work. You can either set \code{wait = FALSE} or simply
interrupt the waiting process, then later, call \code{batch_chat()} to resume
where you left off. Once you're done with the chat results, delete the
file you created to avoid re-using previous results.

This API is marked as experimental, since I don't know how to helpfully
deal with errors. Fortunately they don't seem to be common, but if you
have ideas, please let me know!
}
\examples{
\dontshow{if (has_credentials("claude")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
chat <- chat_anthropic()

# Chat ----------------------------------------------------------------------
country <- c("Canada", "New Zealand", "Jamaica", "United States")
prompts <- interpolate("What's the capital of {{country}}?")
chats <- batch_chat(chat, prompts, path = "capitals.json")
chats
\dontshow{\}) # examplesIf}
}
