% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provider-anthropic-files.R
\name{anthropic_upload_file}
\alias{anthropic_upload_file}
\title{Claude Files API. Upload and manage uploaded files. Download
files generated by Claude.}
\usage{
anthropic_upload_file(
  fpath,
  base_url = "https://api.anthropic.com/v1/files",
  beta_headers = "files-api-2025-04-14",
  api_key = anthropic_key()
)
}
\arguments{
\item{fpath}{Path to a file to upload.}

\item{base_url}{The base URL to the endpoint; the default uses OpenAI.}

\item{beta_headers}{Beta headers to use for the request. Defaults to
\code{files-api-2025-04-14}.}

\item{api_key}{Your Anthropic API key. If \code{NULL}, will use the value of
the \code{ANTHROPIC_API_KEY} environment variable.}

\item{file_id}{ID of the file to get information about, download, or delete.}
}
\value{
An object representing the uploaded file(s). The structure of this
object may change as the API evolves.

A list of files with their metadata.

A \code{ContentAnthropicFile} object representing the file.

The content of the file as a raw vector.

Invisibly returns \code{NULL}.

The raw response from the API as a list.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
\code{anthropic_upload_file()} uploads a file to Anthropic's Claude and returns
a \code{ContentAnthropicFile} object that can be passed to \code{chat_anthropic()}.

\code{anthropic_list_files()} lists all files uploaded to your Anthropic
organization.

\code{anthropic_get_fileinfo()} returns a ContentAnthropicFile object for the
given file ID.

\code{anthropic_download_file()} downloads the file with the given ID.

\code{anthropic_delete_file()} deletes the file with the given ID.

\code{anthropic_upload_file_raw()} uploads a file to Anthropic's Claude and
returns the raw response from the API. This can be useful for debugging or
if you need access to additional metadata not included in the
\code{ContentAnthropicFile} object. Note that this function does not provide any
special handling for the uploaded file, such as determining the appropriate
\code{block_type} for use in chat prompts. You will need to handle that manually
based on the \code{mime_type} returned in the response. Also, this function does
not validate the response, so be sure to check for errors in the returned
object.
}
\details{
Use the beta Files API to upload files to and manage files in Claude.
This is currently experimental because the API is in beta and may change.

Uploaded files can be used in chat prompts as ContentAnthropicFile objects
passed to \code{chat_anthropic()} with appropriate beta headers set. Claude
offers 100GB of file storage per organization, and maximum size per file is
500MB. For more details, please refer to:
\href{https://docs.claude.com/en/docs/build-with-claude/files}{the documentation}
}
\examples{
\dontrun{
file <- anthropic_upload_file("path/to/file.pdf")
chat <- chat_anthropic(beta_headers = "files-api-2025-04-14")
chat$chat("Please summarize the document.", file)
}
\dontrun{
files <- anthropic_list_files()
print(files)
}

\dontrun{
file_info <- anthropic_get_fileinfo("file_id")
print(file_info) # ContentAnthropicFile object
}

\dontrun{
file_content <- anthropic_download_file("file_id")
writeBin(file_content, "downloaded_file.pdf")
}
\dontrun{
anthropic_delete_file("file_id")
}

\dontrun{
raw_response <- anthropic_upload_file_raw("path/to/file.pdf")
print(raw_response) # Raw response from the API
}

}
